{"ast":null,"code":"var _jsxFileName = \"/Users/isaac/Halloween/src/components/AudioManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioManager = ({\n  isLetterOpened\n}) => {\n  _s();\n  const voicyAudioRef = useRef(null);\n  const musicAudioRef = useRef(null);\n\n  // Common Voicy file patterns - add more as needed\n  const [voicyFilePatterns] = useState(['Voicy_Troll! in the dungeon! troll in the dungeon!.mp3', 'Voicy_Welcome to hogwarts.mp3', \"Voicy_You're a wizard harry.mp3\", 'Voicy_3.mp3', 'Voicy_4.mp3', 'Voicy_5.mp3', 'Voicy_6.mp3', 'Voicy_7.mp3', 'Voicy_8.mp3', 'Voicy_9.mp3', 'Voicy_10.mp3', 'Voicy_11.mp3', 'Voicy_12.mp3', 'Voicy_13.mp3', 'Voicy_14.mp3', 'Voicy_15.mp3', 'Voicy_16.mp3', 'Voicy_17.mp3', 'Voicy_18.mp3', 'Voicy_19.mp3', 'Voicy_20.mp3']);\n  const [hasPlayedVoicy, setHasPlayedVoicy] = useState(false);\n  const [availableVoicyFiles, setAvailableVoicyFiles] = useState([]);\n\n  // Test which Voicy files actually exist\n  useEffect(() => {\n    const testFiles = async () => {\n      const existingFiles = [];\n      for (const file of voicyFilePatterns) {\n        try {\n          const response = await fetch(`/audio/voicy/${file}`, {\n            method: 'HEAD'\n          });\n          if (response.ok) {\n            existingFiles.push(file);\n          }\n        } catch (error) {\n          // File doesn't exist, skip it\n        }\n      }\n      setAvailableVoicyFiles(existingFiles);\n      console.log(`Found ${existingFiles.length} Voicy files:`, existingFiles);\n    };\n    testFiles();\n  }, [voicyFilePatterns]);\n  const playHedwigsTheme = useCallback(() => {\n    console.log('Attempting to play Hedwig\\'s Theme...');\n    if (musicAudioRef.current) {\n      musicAudioRef.current.src = '/audio/music/Hedwig\\'s Theme.mp3';\n      musicAudioRef.current.volume = 0.3; // Soft background music\n      musicAudioRef.current.loop = true;\n\n      // Handle audio loading errors gracefully\n      musicAudioRef.current.onerror = () => {\n        console.warn('Could not load Hedwig\\'s Theme');\n      };\n      musicAudioRef.current.play().catch(error => {\n        console.warn('Background music playback failed:', error);\n      });\n    } else {\n      console.warn('Music audio ref is null');\n    }\n  }, []);\n  const playRandomVoicyClip = useCallback(() => {\n    if (voicyAudioRef.current && availableVoicyFiles.length > 0) {\n      // Get a random Voicy file from available files\n      const randomFile = availableVoicyFiles[Math.floor(Math.random() * availableVoicyFiles.length)];\n      console.log(`Playing random Voicy clip: ${randomFile}`);\n      voicyAudioRef.current.src = `/audio/voicy/${randomFile}`;\n      voicyAudioRef.current.volume = 0.7;\n\n      // Handle audio loading errors gracefully\n      voicyAudioRef.current.onerror = () => {\n        console.warn(`Could not load audio file: ${randomFile}`);\n        // If Voicy clip fails, go straight to background music\n        setTimeout(() => {\n          playHedwigsTheme();\n        }, 1000);\n      };\n      voicyAudioRef.current.play().catch(error => {\n        console.warn('Audio playback failed:', error);\n        // If playback fails, go straight to background music\n        setTimeout(() => {\n          playHedwigsTheme();\n        }, 1000);\n      });\n    } else if (availableVoicyFiles.length === 0) {\n      console.warn('No Voicy files found, going straight to background music');\n      setTimeout(() => {\n        playHedwigsTheme();\n      }, 1000);\n    }\n  }, [availableVoicyFiles, playHedwigsTheme]);\n  useEffect(() => {\n    if (isLetterOpened && !hasPlayedVoicy && availableVoicyFiles.length > 0) {\n      playRandomVoicyClip();\n      setHasPlayedVoicy(true);\n    }\n  }, [isLetterOpened, hasPlayedVoicy, playRandomVoicyClip, availableVoicyFiles]);\n  const handleVoicyEnded = () => {\n    console.log('Voicy clip ended, starting Hedwig\\'s Theme...');\n    // After Voicy clip ends, start Hedwig's Theme\n    setTimeout(() => {\n      playHedwigsTheme();\n    }, 500); // Small delay for smooth transition\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: voicyAudioRef,\n      onEnded: handleVoicyEnded,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: musicAudioRef,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AudioManager, \"2glxrFfljZ7/9SdOMyW7KpWtyxg=\");\n_c = AudioManager;\nexport default AudioManager;\nvar _c;\n$RefreshReg$(_c, \"AudioManager\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioManager","isLetterOpened","_s","voicyAudioRef","musicAudioRef","voicyFilePatterns","hasPlayedVoicy","setHasPlayedVoicy","availableVoicyFiles","setAvailableVoicyFiles","testFiles","existingFiles","file","response","fetch","method","ok","push","error","console","log","length","playHedwigsTheme","current","src","volume","loop","onerror","warn","play","catch","playRandomVoicyClip","randomFile","Math","floor","random","setTimeout","handleVoicyEnded","children","ref","onEnded","preload","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/isaac/Halloween/src/components/AudioManager.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\n\ninterface AudioManagerProps {\n  isLetterOpened: boolean;\n}\n\nconst AudioManager: React.FC<AudioManagerProps> = ({ isLetterOpened }) => {\n  const voicyAudioRef = useRef<HTMLAudioElement>(null);\n  const musicAudioRef = useRef<HTMLAudioElement>(null);\n  \n  // Common Voicy file patterns - add more as needed\n  const [voicyFilePatterns] = useState([\n    'Voicy_Troll! in the dungeon! troll in the dungeon!.mp3',\n    'Voicy_Welcome to hogwarts.mp3',\n    \"Voicy_You're a wizard harry.mp3\", \n    'Voicy_3.mp3',\n    'Voicy_4.mp3',\n    'Voicy_5.mp3',\n    'Voicy_6.mp3',\n    'Voicy_7.mp3',\n    'Voicy_8.mp3',\n    'Voicy_9.mp3',\n    'Voicy_10.mp3',\n    'Voicy_11.mp3',\n    'Voicy_12.mp3',\n    'Voicy_13.mp3',\n    'Voicy_14.mp3',\n    'Voicy_15.mp3',\n    'Voicy_16.mp3',\n    'Voicy_17.mp3',\n    'Voicy_18.mp3',\n    'Voicy_19.mp3',\n    'Voicy_20.mp3'\n  ]);\n  \n  const [hasPlayedVoicy, setHasPlayedVoicy] = useState(false);\n  const [availableVoicyFiles, setAvailableVoicyFiles] = useState<string[]>([]);\n\n  // Test which Voicy files actually exist\n  useEffect(() => {\n    const testFiles = async () => {\n      const existingFiles: string[] = [];\n      \n      for (const file of voicyFilePatterns) {\n        try {\n          const response = await fetch(`/audio/voicy/${file}`, { method: 'HEAD' });\n          if (response.ok) {\n            existingFiles.push(file);\n          }\n        } catch (error) {\n          // File doesn't exist, skip it\n        }\n      }\n      \n      setAvailableVoicyFiles(existingFiles);\n      console.log(`Found ${existingFiles.length} Voicy files:`, existingFiles);\n    };\n    \n    testFiles();\n  }, [voicyFilePatterns]);\n\n  const playHedwigsTheme = useCallback(() => {\n    console.log('Attempting to play Hedwig\\'s Theme...');\n    if (musicAudioRef.current) {\n      musicAudioRef.current.src = '/audio/music/Hedwig\\'s Theme.mp3';\n      musicAudioRef.current.volume = 0.3; // Soft background music\n      musicAudioRef.current.loop = true;\n      \n      // Handle audio loading errors gracefully\n      musicAudioRef.current.onerror = () => {\n        console.warn('Could not load Hedwig\\'s Theme');\n      };\n      \n      musicAudioRef.current.play().catch((error) => {\n        console.warn('Background music playback failed:', error);\n      });\n    } else {\n      console.warn('Music audio ref is null');\n    }\n  }, []);\n\n  const playRandomVoicyClip = useCallback(() => {\n    if (voicyAudioRef.current && availableVoicyFiles.length > 0) {\n      // Get a random Voicy file from available files\n      const randomFile = availableVoicyFiles[Math.floor(Math.random() * availableVoicyFiles.length)];\n      console.log(`Playing random Voicy clip: ${randomFile}`);\n      \n      voicyAudioRef.current.src = `/audio/voicy/${randomFile}`;\n      voicyAudioRef.current.volume = 0.7;\n      \n      // Handle audio loading errors gracefully\n      voicyAudioRef.current.onerror = () => {\n        console.warn(`Could not load audio file: ${randomFile}`);\n        // If Voicy clip fails, go straight to background music\n        setTimeout(() => {\n          playHedwigsTheme();\n        }, 1000);\n      };\n      \n      voicyAudioRef.current.play().catch((error) => {\n        console.warn('Audio playback failed:', error);\n        // If playback fails, go straight to background music\n        setTimeout(() => {\n          playHedwigsTheme();\n        }, 1000);\n      });\n    } else if (availableVoicyFiles.length === 0) {\n      console.warn('No Voicy files found, going straight to background music');\n      setTimeout(() => {\n        playHedwigsTheme();\n      }, 1000);\n    }\n  }, [availableVoicyFiles, playHedwigsTheme]);\n\n  useEffect(() => {\n    if (isLetterOpened && !hasPlayedVoicy && availableVoicyFiles.length > 0) {\n      playRandomVoicyClip();\n      setHasPlayedVoicy(true);\n    }\n  }, [isLetterOpened, hasPlayedVoicy, playRandomVoicyClip, availableVoicyFiles]);\n\n  const handleVoicyEnded = () => {\n    console.log('Voicy clip ended, starting Hedwig\\'s Theme...');\n    // After Voicy clip ends, start Hedwig's Theme\n    setTimeout(() => {\n      playHedwigsTheme();\n    }, 500); // Small delay for smooth transition\n  };\n\n  return (\n    <>\n      {/* Voicy Audio Element */}\n      <audio\n        ref={voicyAudioRef}\n        onEnded={handleVoicyEnded}\n        preload=\"metadata\"\n      />\n      \n      {/* Background Music Audio Element */}\n      <audio\n        ref={musicAudioRef}\n        preload=\"metadata\"\n      />\n    </>\n  );\n};\n\nexport default AudioManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}